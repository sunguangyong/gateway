// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"xunjikeji.com.cn/gateway/app/external/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/gateway/external/protocol/readtest",
				Handler: protocolReadTestHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/gateway/external/protocol/writetest",
				Handler: protocolWriteTestHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/gateway/external/heart/beat",
				Handler: heartbeatHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/gateway/save",
				Handler: gatewaySaveHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/gateway/delete",
				Handler: gatewayDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/gateway/list",
				Handler: gatewayListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/gateway/list-export",
				Handler: GatewayListExportHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/nedevice/save",
				Handler: neDeviceSaveHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/nedevice/delete",
				Handler: neDeviceDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/nedevice/list",
				Handler: neDeviceListHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/gateway/external/point/save",
				Handler: pointSaveHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/gateway/external/point/delete",
				Handler: pointDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/gateway/external/pointall/delete",
				Handler: pointDeleteAllHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/gateway/external/point/list",
				Handler: pointListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/gateway/external/writpoint/list",
				Handler: pointWriteListHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/gateway/external/protocol/save",
				Handler: protoSaveHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/gateway/export/protocol/config",
				Handler: exportConfigHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/gateway/external/protocol/delete",
				Handler: protoDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/gateway/external/protocol/list",
				Handler: protoListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/gateway/external/protocol/dropdown",
				Handler: protoDropDownHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/gateway/external/protoconfig/dropdown",
				Handler: protoConfigDropDownHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/gateway/external/protocol/deploy",
				Handler: protocolDeployHandler(serverCtx),
			},
		},
	)
}

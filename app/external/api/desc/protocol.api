info(
    title: "网关协议"
    desc: "网关协议配置及部署相关功能"
    author: "sunguangyong"
    email: "sungy@xunjikeji.com.cn"
    version: "v1"
)

type (
    // opcua协议访问连接配置
    OpcUaJsonOptions {
        Protocol string `json:"protocol"` // 协议名称
        UserName string `json:"userName"` // 用户名
        PassWd   string `json:"passWd"`   // 密码
        Policy   string `json:"policy"`   // 端点2 加密策略
        Mode     string `json:"mode"`     // 端点1 模式
        Cert     bool   `json:"cert"`     // 是否需要证书
    }

        // opcua 点表配置
    OpcUaJsonItems {
        Protocol string `json:"protocol"` // 协议名称
        NodeId   string `json:"nodeId"`   // 节点Id
        DataName string `json:"dataName"` // 数据名称
        Method   string `json:"method"`   // 读取方法
    }

        // modbusTcp 协议访问连接
    ModbusTcpJsonOptions  {
        Protocol string `json:"protocol"` // 协议类型
        SlaveId  byte   `json:"slaveId"` // 从站地址
    }

    ModbusTcpJsonItems  {
        Protocol string `json:"protocol"` // 协议
        Address  uint16 `json:"address"`  // 地址位
        DataName string `json:"dataName"` // 数据名称
        Method   string `json:"method"`   // 读取方法
    }

    ModbusRtuJsonOptions {
        Protocol string `json:"protocol"` // 协议名称
        SlaveId  byte   `json:"slaveId"` // 从站地址
        BaudRate int    `json:"baudRate"` // 波特率
        DataBits int    `json:"dataBits"` // 数据位
        StopBits int    `json:"stopBits"` // 停止位
        Parity   string `json:"parity"`   // 校验方式
    }

    ModbusRtuJsonItems {
        Protocol string `json:"protocol"` // 协议
        Address  uint16 `json:"address"`  // 地址位
        DataName string `json:"dataName"` // 数据名称
        Method   string `json:"method"`   // 读取方法
    }

    ProtocolTestRequest {
        AgwId int64 `json:"agwId"` // 网关id
        neDeviceIds []int64 `json:"neDeviceIds"` // 设备id
    }

    ProtocolTestResponse  {
        DeviceName    string     `json:"deviceName"`
        Timestamp   string    `json:"timestamp"`
        ContentList []Content `json:"contentList"`
    }

    Content {
        Addr      interface{} `json:"addr"`
        AddrValue interface{} `json:"addrValue"`
    }

    ProtocolWriteTestRequest {
        AgwId int64 `json:"agwId"` // 网关id
        Address  uint16 `json:"address"`  // 地址位
        Method    string `json:"method"`    // 属性方法
        NeDeviceId int64 `json:"neDeviceId"` // 设备id
        ConfigNid int64 `json:"configNid"` // 协议id
        DataName string `json:"dataName"` // 属性名
        Nid int64  `json:"nid"`       // 点表id
        Value string `json:"value"` // 写入值
    }

    ProtocolWriteTestResponse {
    }
)

service apis {
    @doc(
        summary: "测试读协议v2"
    )
    @handler protocolReadTest
    post /api/gateway/external/protocol/readtest (ProtocolTestRequest) returns (ProtocolTestResponse)

    @doc(
        summary: "测试写协议新增"
    )
    @handler protocolWriteTest
    post /api/gateway/external/protocol/writetest (ProtocolWriteTestRequest) returns (ProtocolWriteTestResponse)
}


